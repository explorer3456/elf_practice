Stack
==========

C uses the stack for 
	storing local (auto) variables, 
	passing function arguments
	storing return address etc

So, it is essential that the stack be setup correctly, before transferring control to C Code

Stacks are highly flexible in the ARM architecture, since the implementation is completely left to the software. 

To make sure that code generated by different compilers is interroperable, ARM has created the ARM Architecture Procedure Call Standard (AAPCS)

The register to be used as the stack pointer and the direction in which the stack grows is all dictated by the AAPCS.

 According to the AAPCS, register r13 is to be used as the stack pointer. Also the stack should be full-descending.

Refer stack.png

So all that has to be done in the startup code is to point r13 at the highest RAM address, so that the stack can grow downwards (towards lower addresses).

For the connex board this can be acheived using the following ARM instruction.

 ldr sp, =0xA4000000

Note that the the assembler provides an alias sp for the r13 register.

Note:

The address 0xA4000000 itself does not correspond to RAM. The RAM ends at 0xA3FFFFFF. But that is OK, since the stack is full-descending, during the first push the stack pointer will be decremented first and the value will be stored.

